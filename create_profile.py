# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'create_profile.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_createProfile(object):
    #Method to check if a field in regsitration is missing
    #The method iterates over each field in the fields list and checks if the widget is None.
    #If anything in the form is invalid or missing, returns true. otherwise false
    def isMissing(self):
        fields = [
            {'name': 'Name', 'widget': self.box_name},
            {'name': 'Age', 'widget': self.box_age},
            {'name': 'Gender', 'widget': None},
            {'name': 'Feet', 'widget': self.box_feet},
            {'name': 'Inches', 'widget': self.box_inches}
        ]

        for field in fields:
            if field['widget'] is None:
                if not self.rad_male.isChecked() and not self.rad_female.isChecked():
                    return True
            elif field['widget'].text().strip() == '':
                return True

        return False

    #Event when Submit button is clicked
    def show_line (self):
        try:
            #nested function to convert ft to cm
            def convert_to_cm(feet, inches):
                total_inches = feet * 12 + inches
                cm = total_inches * 2.54
                return cm
            
            if self.isMissing():
                print("MISSING VALUE")
            else:
                print ("VALID.")

            #Prints Name and Age
            print(self.box_name.text())
            print(self.box_age.value())

            #If Male radio is toggled, register as Male
            if self.rad_male.isChecked():
                print("Male")
            #If Female radio is toggled, register as Female
            elif self.rad_female.isChecked():
                print ("Female")

            #Saves feet and inches as a string then converts it into an int.
            #I did this to maintain the aestethic of the editLine thing
            feet = int(self.box_feet.text())
            inches = int(self.box_inches.text())
            result = convert_to_cm(feet, inches)
            print (result)

        except:
            #print label that says ERROR with red message and bold
            error_label = QtWidgets.QLabel(self.centralwidget)
            error_label.setGeometry(QtCore.QRect(60, 650, 300, 30))  # Adjust the width to fit the entire message
            font = QtGui.QFont("Arial", 12)
            font.setPointSize(10)
            font.setBold(True)  # Set the font to bold
            error_label.setFont(font)
            error_label.setStyleSheet("color: red")
            error_label.setText("Missing Requirements or Invalid Input")
            error_label.adjustSize()  # Adjust the label size to fit the text
            error_label.show()

            print("int values only")
            self.clear_all()

    #Clears user inputs. DOES NOT clear Gender
    def clear_all (self):
        #Name and Age Clear
        self.box_name.clear()
        self.box_age.clear()

        #Height Clear
        self.box_feet.clear()
        self.box_inches.clear()

    def setupUi(self, createProfile):
        createProfile.setObjectName("createProfile")
        createProfile.resize(412, 732)
        self.centralwidget = QtWidgets.QWidget(createProfile)
        self.centralwidget.setObjectName("centralwidget")

        self.btn_create = QtWidgets.QPushButton(self.centralwidget)
        self.btn_create.setGeometry(QtCore.QRect(240, 590, 93, 28))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.btn_create.setFont(font)
        self.btn_create.setObjectName("btn_create")

        #When Cliked, triggers confirmation event.
        self.btn_create.clicked.connect(self.show_line)

        #Lambda expression on when clicked, gender = male
        self.rad_male = QtWidgets.QRadioButton(self.centralwidget, clicked = lambda: self.show_line)
        self.rad_male.setGeometry(QtCore.QRect(152, 290, 95, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.rad_male.setFont(font)
        self.rad_male.setObjectName("rad_male")

        #Lambda expression on when clicked, gender = female
        self.rad_female = QtWidgets.QRadioButton(self.centralwidget, clicked = lambda: self.show_line)
        self.rad_female.setGeometry(QtCore.QRect(152, 350, 95, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.rad_female.setFont(font)
        self.rad_female.setObjectName("rad_female")


        #groups radio buttons female and male into one. 
        #Uses the object "button_group"
        self.button_group = QtWidgets.QButtonGroup()
        self.button_group.addButton(self.rad_male)
        self.button_group.addButton(self.rad_female)
        self.button_group.setExclusive(True)

        self.box_feet = QtWidgets.QLineEdit(self.centralwidget)
        self.box_feet.setGeometry(QtCore.QRect(150, 430, 51, 22))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.box_feet.setFont(font)
        self.box_feet.setObjectName("box_feet")

        self.box_inches = QtWidgets.QLineEdit(self.centralwidget)
        self.box_inches.setGeometry(QtCore.QRect(220, 430, 71, 22))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.box_inches.setFont(font)
        self.box_inches.setObjectName("box_inches")

        self.box_name = QtWidgets.QLineEdit(self.centralwidget)
        self.box_name.setGeometry(QtCore.QRect(152, 84, 137, 22))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.box_name.setFont(font)
        self.box_name.setObjectName("box_name")

        self.box_age = QtWidgets.QSpinBox(self.centralwidget)
        self.box_age.setGeometry(QtCore.QRect(152, 187, 137, 22))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.box_age.setFont(font)
        self.box_age.setObjectName("box_age")

        self.label_name = QtWidgets.QLabel(self.centralwidget)
        self.label_name.setGeometry(QtCore.QRect(60, 90, 55, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_name.setFont(font)
        self.label_name.setObjectName("label_name")

        self.label_age = QtWidgets.QLabel(self.centralwidget)
        self.label_age.setGeometry(QtCore.QRect(80, 180, 55, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_age.setFont(font)
        self.label_age.setObjectName("label_age")

        self.label_sex = QtWidgets.QLabel(self.centralwidget)
        self.label_sex.setGeometry(QtCore.QRect(80, 290, 55, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_sex.setFont(font)
        self.label_sex.setObjectName("label_sex")

        

        self.btn_clear = QtWidgets.QPushButton(self.centralwidget)
        self.btn_clear.setGeometry(QtCore.QRect(90, 590, 93, 28))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.btn_clear.setFont(font)
        self.btn_clear.setObjectName("btn_clear")

        #Instance when button clear is clicked
        self.btn_clear.clicked.connect(self.clear_all)

        self.label_height = QtWidgets.QLabel(self.centralwidget)
        self.label_height.setGeometry(QtCore.QRect(80, 410, 55, 51))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_height.setFont(font)
        self.label_height.setObjectName("label_height")

        createProfile.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(createProfile)
        self.statusbar.setObjectName("statusbar")
        createProfile.setStatusBar(self.statusbar)

        self.retranslateUi(createProfile)
        QtCore.QMetaObject.connectSlotsByName(createProfile)

    def retranslateUi(self, createProfile):
        _translate = QtCore.QCoreApplication.translate
        createProfile.setWindowTitle(_translate("createProfile", "MainWindow"))
        self.btn_create.setText(_translate("createProfile", "Create"))
        self.rad_male.setText(_translate("createProfile", "Male"))
        self.label_name.setText(_translate("createProfile", "Name:"))
        self.label_age.setText(_translate("createProfile", "Age:"))
        self.label_sex.setText(_translate("createProfile", "Sex:"))
        self.rad_female.setText(_translate("createProfile", "Female"))
        self.btn_clear.setText(_translate("createProfile", "Clear"))
        self.label_height.setText(_translate("createProfile", "Height:"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    createProfile = QtWidgets.QMainWindow()
    ui = Ui_createProfile()
    ui.setupUi(createProfile)
    createProfile.show()
    sys.exit(app.exec_())
